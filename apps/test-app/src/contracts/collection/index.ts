/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

export { useMasterQuery as useQuery, useIteratorQuery } from '@dappql/core'
import { MutationOptions, useMasterMutation } from '@dappql/core'

import ToDo from './ToDo'

export const CONTRACTS = {
  ToDo,
} as const

export type Contracts = typeof CONTRACTS

export const calls = {
  ToDo: ToDo.call,
} as const

export const mutations = {
  ToDo: ToDo.mutation,
} as const

export function useMutation<C extends keyof typeof mutations, M extends Parameters<(typeof mutations)[C]>[0]>(
  contract: C,
  method: M,
  options?: MutationOptions,
) {
  // @ts-ignore -- TODO: Fix the contract method not callable TS issue
  return useMasterMutation(mutations[contract](method), options)
}
